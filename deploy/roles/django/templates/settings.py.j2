"""
Django settings for pycd project.

For more information on this file, see
https://docs.djangoproject.com/en/1.7/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.7/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
BASE_DIR = os.path.dirname(os.path.dirname(__file__))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '{{ django_secret_key }}'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = {{ django_debug | default('False') }}
TEMPLATE_DEBUG = DEBUG
ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'treemenus',
    'ckeditor',
    'dashboard',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware'
)

ROOT_URLCONF = 'eversi.urls'

WSGI_APPLICATION = 'eversi.wsgi.application'
# Database
# https://docs.djangoproject.com/en/1.7/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': '{{ database_backend }}',
        'NAME': '{{ database_name }}',
        'USER': '{{ database_user }}',
        'PASSWORD': '{{ database_password }}',
        'HOST': '{{ database_host }}'
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.7/topics/i18n/

LANGUAGE_CODE = 'ru-ru'
TIME_ZONE = 'Asia/Novosibirsk'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.7/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join('{{ django_deploy_path }}', 'static')
MEDIA_ROOT = os.path.join(STATIC_ROOT, 'media')
MEDIA_URL = os.path.join(STATIC_URL, 'media/')
CKEDITOR_UPLOAD_PATH = 'uploads/'

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': [
            {
                'name': 'document',
                'groups': ['mode', 'document', 'doctools'],
                'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print',
                          '-', 'Templates']
            },
            {
                'name': 'clipboard',
                'groups': ['clipboard', 'undo'],
                'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord',
                          '-', 'Undo', 'Redo']
            },
            {
                'name': 'editing',
                'groups': ['find', 'selection', 'spellchecker'],
                'items': ['Find', 'Replace', '-', 'SelectAll', '-', 'Scayt']
            },
            {
                'name': 'forms',
                'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea',
                          'Select', 'Button', 'ImageButton', 'HiddenField']
            },
            '/',
            {
                'name': 'basicstyles',
                'groups': ['basicstyles', 'cleanup'],
                'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript',
                          'Superscript', '-', 'RemoveFormat']
            },
            {
                'name': 'paragraph',
                'groups': ['list', 'indent', 'blocks', 'align', 'bidi'],
                'items': ['NumberedList', 'BulletedList', '-', 'Outdent',
                          'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                          'JustifyLeft', 'JustifyCenter', 'JustifyRight',
                          'JustifyBlock', '-', 'BidiLtr', 'BidiRtl','Language']
            },
            {
                'name': 'links',
                'items': ['Link', 'Unlink', 'Anchor']},
            {
                'name': 'insert',
                'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley',
                          'SpecialChar', 'PageBreak', 'Iframe']
            },
            '/',
            {
                'name': 'styles',
                'items': ['Styles', 'Format', 'Font', 'FontSize']
            },
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            {'name': 'others', 'items': ['-']},
        ],
    },
}

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'eversi', 'static'),
)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '[%(levelname)s] %(asctime)s %(module)s %(process)d: %(message)s'
        }
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
    'root': {
        'level': 'INFO',
        'handlers': ['console']
    }
}
